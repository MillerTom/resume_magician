# Generated by Django 5.0.2 on 2025-03-16 02:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApifyKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Apify API Key',
                'db_table': 'apify_key',
            },
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=200)),
                ('url', models.URLField()),
                ('priority', models.IntegerField(default=0)),
                ('days', models.IntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Configuration',
                'db_table': 'configurations',
            },
        ),
        migrations.CreateModel(
            name='Scraper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('actor_id', models.CharField(max_length=100)),
                ('actor_name', models.CharField(max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Scraper',
                'db_table': 'scrapers',
            },
        ),
        migrations.CreateModel(
            name='JobBoardResult',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('job_title', models.CharField(default='', max_length=220)),
                ('job_description', models.TextField()),
                ('source', models.CharField(default='', max_length=50)),
                ('skill', models.CharField(default='', max_length=220)),
                ('date_resume_created', models.DateTimeField(null=True)),
                ('date_scraped', models.DateTimeField(null=True)),
                ('run_id', models.CharField(default='', max_length=50)),
                ('date_job_posted', models.DateTimeField(null=True)),
                ('salary', models.CharField(default=50)),
                ('job_type', models.CharField(default='', max_length=50)),
                ('company', models.CharField(default='', max_length=100)),
                ('location', models.CharField(default='', max_length=100)),
                ('job_url', models.URLField(max_length=500, null=True)),
                ('customized_resume_url', models.URLField(max_length=500, null=True)),
                ('applied_for_by', models.CharField(default='', max_length=100)),
                ('date_applied_for', models.DateTimeField(null=True)),
                ('general_notes', models.CharField(default='', max_length=500)),
                ('is_request_regeneration', models.BooleanField(default=False)),
                ('job_mismatch', models.BooleanField(default=False)),
                ('who_jd_mismatch', models.CharField(default='', max_length=100)),
                ('is_complex_form', models.BooleanField(default=False)),
                ('is_easyapply', models.BooleanField(default=False)),
                ('apply_status', models.CharField(default='', max_length=100)),
                ('failure_applying', models.IntegerField(default=0)),
                ('external_apply_url', models.URLField(max_length=500, null=True)),
                ('lock_application', models.BooleanField(default=False)),
                ('date_apply_started', models.DateTimeField(null=True)),
                ('date_job_removed_from_site', models.DateTimeField(null=True)),
                ('problem_applying_description', models.CharField(default='', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('configuration', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='configuration_job_results', to='scraper.configuration')),
            ],
            options={
                'db_table': 'jobboard_results',
            },
        ),
        migrations.CreateModel(
            name='ScrapeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('run_id', models.CharField(max_length=50, unique=True)),
                ('dataset_id', models.CharField(blank=True, max_length=50, null=True)),
                ('job_board', models.CharField(max_length=50)),
                ('days', models.IntegerField(default=1)),
                ('status', models.CharField(max_length=50)),
                ('input_json', models.JSONField(blank=True, null=True)),
                ('run_time', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('price', models.DecimalField(decimal_places=4, default=0.0, max_digits=8)),
                ('is_done', models.BooleanField(default=False)),
                ('number_of_jobs', models.IntegerField(default=0)),
                ('configuration', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='configuration_history', to='scraper.configuration')),
            ],
            options={
                'verbose_name_plural': 'Scrape History',
                'db_table': 'scrape_history',
            },
        ),
        migrations.AddField(
            model_name='configuration',
            name='scraper',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scraper_configurations', to='scraper.scraper'),
        ),
    ]
