# Generated by Django 5.1.5 on 2025-02-20 17:22

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApifyKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Apify API Key',
                'db_table': 'apify_key',
            },
        ),
        migrations.CreateModel(
            name='configdice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Skill', models.TextField()),
                ('Url', models.TextField()),
                ('Isactive', models.BooleanField(default=True)),
                ('Priority', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'configdice',
                'verbose_name_plural': 'configdices',
                'db_table': 'configdice',
            },
        ),
        migrations.CreateModel(
            name='configindeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Skill', models.TextField()),
                ('Url', models.TextField()),
                ('Isactive', models.BooleanField()),
                ('Priority', models.IntegerField(default=0)),
                ('Donetoday', models.TextField()),
            ],
            options={
                'verbose_name': 'configindeed',
                'verbose_name_plural': 'configindeeds',
                'db_table': 'configindeed',
            },
        ),
        migrations.CreateModel(
            name='configlinkedin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Skill', models.TextField()),
                ('Url', models.TextField()),
                ('Isactive', models.BooleanField(default=True)),
                ('Priority', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'configlinkedin',
                'verbose_name_plural': 'configlinkedins',
                'db_table': 'configlinkedin',
            },
        ),
        migrations.CreateModel(
            name='configziprecruiter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Skill', models.TextField()),
                ('Url', models.TextField()),
                ('Isactive', models.BooleanField(default=True)),
                ('Priority', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'configziprecruiter',
                'verbose_name_plural': 'configziprecruiters',
                'db_table': 'configziprecruiter',
            },
        ),
        migrations.CreateModel(
            name='jobboardscrapehistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Datescrapestarted', models.TextField()),
                ('Datescrapeended', models.TextField()),
                ('Runid', models.TextField()),
                ('Scrapername', models.TextField()),
                ('Jobboard', models.TextField()),
                ('Url', models.TextField()),
                ('Days', models.IntegerField()),
                ('Priority', models.IntegerField(default=0)),
                ('Skill', models.TextField()),
                ('Beginningstate', models.TextField()),
                ('Endingstate', models.TextField()),
                ('Endingstatesetby', models.TextField()),
                ('Logdetails', models.TextField()),
                ('Numberofjobsreturned', models.IntegerField()),
                ('Rawjsonpassedtoscraper', models.TextField()),
                ('Rawjsonresponsefromapify', models.TextField()),
                ('Runtime', models.FloatField()),
                ('Price', models.FloatField()),
            ],
            options={
                'verbose_name': 'jobboardscrapehistory',
                'verbose_name_plural': 'jobboardscrapehistorys',
                'db_table': 'jobboardscrapehistory',
            },
        ),
        migrations.CreateModel(
            name='jobboardscraperesults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Jobtitle', models.TextField()),
                ('Jobdescription', models.TextField()),
                ('Source', models.TextField()),
                ('Skill', models.TextField()),
                ('ResumeCreated', models.TextField()),
                ('Dateinserted', models.TextField()),
                ('ScrapedAt', models.TextField()),
                ('Runid', models.TextField()),
                ('PostedAt', models.TextField()),
                ('Salary', models.TextField()),
                ('JobType', models.TextField()),
                ('Company', models.TextField()),
                ('Location', models.TextField()),
                ('Joburl', models.TextField()),
                ('Jobid', models.TextField()),
                ('JdIsmismatch', models.FloatField()),
                ('WhoJdIsmismatch', models.FloatField()),
                ('Iscomplexform', models.FloatField()),
                ('TodayDate', models.TextField()),
                ('ApplyType', models.TextField()),
                ('Externalapplyurl', models.TextField(null=True)),
            ],
            options={
                'verbose_name': 'jobboardscraperesult',
                'verbose_name_plural': 'jobboardscraperesults',
                'db_table': 'jobboardscraperesults',
            },
        ),
        migrations.CreateModel(
            name='resumes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Jobtitle', models.TextField()),
                ('Jobdescription', models.TextField()),
                ('Source', models.TextField()),
                ('Skill', models.TextField()),
                ('Dateresumecreated', models.TextField()),
                ('Scrapedat', models.TextField()),
                ('Runid', models.TextField()),
                ('Dateposted', models.TextField()),
                ('Salary', models.TextField()),
                ('Jobtype', models.TextField()),
                ('Company', models.TextField()),
                ('Location', models.TextField()),
                ('Joburl', models.TextField()),
                ('Customizedresume', models.TextField()),
                ('Appliedforby', models.TextField()),
                ('Appliedfordate', models.TextField()),
                ('Notes', models.FloatField()),
                ('Requestregeneration', models.FloatField()),
                ('Jobid', models.TextField()),
                ('JdIsmismatch', models.FloatField()),
                ('WhoJdIsmismatch', models.FloatField()),
                ('Iscomplexform', models.BooleanField()),
                ('Iseasyapply', models.TextField()),
                ('Applystatus', models.TextField()),
                ('Failuresapplying', models.FloatField()),
                ('Lock', models.TextField()),
                ('Applystartedat', models.TextField()),
                ('Date', models.DateTimeField()),
                ('Datejobremovedfromsite', models.FloatField()),
                ('Externalapplyurl', models.URLField()),
                ('Problemapplying', models.FloatField()),
                ('Index', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Scraper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('actor_id', models.CharField(max_length=100)),
                ('actor_name', models.CharField(max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Scraper',
                'db_table': 'scrapers',
            },
        ),
    ]
